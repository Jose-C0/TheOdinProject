-- CREATE DATABASE inventorydb; DB is created in docker compose

CREATE TABLE categories (
  category_id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1),
  category_name VARCHAR(100) NOT NULL,
  description TEXT
);

INSERT INTO categories (category_name, description) VALUES
('Fruits', 'Fresh fruits including apples, bananas, and oranges.'),
('Vegetables', 'Various types of vegetables including carrots, potatoes, and lettuce.'),
('Dairy', 'Milk, cheese, yogurt, and other dairy products.'),
('Snacks', 'Chips, cookies, and other snack items.');

CREATE TABLE suppliers (
  supplier_id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 200 INCREMENT BY 1),
  supplier_name VARCHAR(100) NOT NULL,
  contact_name VARCHAR(100),
  phone VARCHAR(15),
  email VARCHAR(100),
  address TEXT
);

INSERT INTO suppliers (supplier_name, contact_name, phone, email, address) VALUES
('Fresh Farms', 'John Doe', '123-456-7890', 'contact@freshfarms.com', '123 Farm Lane, Springfield'),
('Dairy Delight', 'Jane Smith', '987-654-3210', 'info@dairydelight.com', '456 Dairy Rd, Springfield'),
('Snack World', 'Alice Johnson', '555-123-4567', 'sales@sackworld.com', '789 Snack St, Springfield');

CREATE TABLE products (
  product_id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 300 INCREMENT BY 1),
  product_name VARCHAR(100) NOT NULL,
  category_id INT REFERENCES categories(category_id) ON DELETE SET NULL,
  quantity_in_stock INT NOT NULL,
  unit_price DECIMAL(10, 2) NOT NULL,
  supplier_id INT REFERENCES suppliers(supplier_id) ON DELETE SET NULL,
  expiration_date DATE
);
 
INSERT INTO products (product_name, category_id, quantity_in_stock, unit_price, supplier_id, expiration_date) VALUES
('Apple',  100, 100, 0.50, 200, '2025-12-31'),
('Banana', 100, 150, 0.30, 200, '2025-11-30'),
('Carrot', 101, 200, 0.20, 200, '2025-10-15'),
('Milk',   102, 50, 1.00,  201, '2025-02-28'),
('Chips',  103, 75, 1.50,  202, '2025-06-30');

CREATE TABLE users (
  user_id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 400 INCREMENT BY 1),
  user_name VARCHAR(50) NOT NULL UNIQUE,
  password_hash VARCHAR(255) NOT NULL,
  role varchar(20) NOT NULL
);

INSERT INTO users (user_name, password_hash, role) VALUES
('admin', 'hashed_password_1', 'admin'),
('user1', 'hashed_password_2', 'user'),
('user2', 'hashed_password_3', 'user');

CREATE TABLE inventorytransactions (
  transaction_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 500 INCREMENT BY 1) PRIMARY KEY,
  product_id INT REFERENCES products(product_id) ON DELETE CASCADE,
  transaction_type VARCHAR(10) CHECK (transaction_type IN ('IN', 'OUT')),
  quantity INT NOT NULL,
  transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  user_id INT REFERENCES users(user_id) ON DELETE SET NULL
);

INSERT INTO inventorytransactions (product_id, transaction_type, quantity, transaction_date, user_id) VALUES
(300, 'IN', 50, DEFAULT,  400),
(301, 'OUT', 20, DEFAULT, 401),
(302, 'IN', 100, DEFAULT, 402),
(303, 'OUT', 10, DEFAULT, 400);

-- END


